import customtkinter as ctk
from tkinter import messagebox


class ProfilePage:
    def __init__(self, root, username, db_manager):
        self.root = root
        self.username = username
        self.db_manager = db_manager

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–∫–Ω–æ
        window_width = 800
        window_height = 550
        screen_width = self.root.winfo_screenwidth()
        screen_height = self.root.winfo_screenheight()
        # self.root.geometry(f"{window_width}x{window_height}+"
        #                    f"{(screen_width - window_width) // 2}+"
        #                    f"{(screen_height - window_height) // 2}")
        self.root.resizable(False, False)

        # –°–æ–∑–¥–∞—ë–º —Ñ—Ä–µ–π–º
        self.frame = ctk.CTkFrame(self.root)
        self.frame.pack(padx=20, pady=20, fill="both", expand=True)

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        self.back_button = ctk.CTkButton(self.frame, text="ü†î", font=("Arial", 35), width=6, command=self.go_back)
        self.back_button.pack(padx=20, pady=20, anchor="nw")

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.title_label = ctk.CTkLabel(self.frame, text=f"{self.username}", font=("Impact", 40))
        self.title_label.pack(pady=20)

        # –ü–æ–ª–µ "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        self.username_label = ctk.CTkLabel(self.frame, text="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", font=("Arial", 20))
        self.username_label.pack(anchor="w", padx=20, pady=(10, 0))
        self.username_value = ctk.CTkLabel(self.frame, text=self.username, font=("Arial", 18))
        self.username_value.pack(anchor="w", padx=20)

        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        password = self.get_user_password()

        # –ü–æ–ª–µ "–ü–∞—Ä–æ–ª—å"
        self.password_label = ctk.CTkLabel(self.frame, text="–ü–∞—Ä–æ–ª—å:", font=("Arial", 20))
        self.password_label.pack(anchor="w", padx=20, pady=(10, 0))
        self.password_value = ctk.CTkLabel(self.frame, text=password, font=("Arial", 18))
        self.password_value.pack(anchor="w", padx=20)

        # –ö–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" –∏ "–û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
        self.buttons_frame = ctk.CTkFrame(self.frame, fg_color = "#3F2F25")
        self.buttons_frame.pack(pady=30)

        self.stats_button = ctk.CTkButton(self.buttons_frame, text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", font=("Arial", 16),
                                          command=self.open_statistics)
        self.stats_button.grid(row=0, column=0, padx=10)

        self.clear_stats_button = ctk.CTkButton(self.buttons_frame, text="–û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", font=("Arial", 16),
                                                command=self.clear_statistics)
        self.clear_stats_button.grid(row=0, column=1, padx=10)

        # –ö–Ω–æ–ø–∫–∞ "–í—ã–π—Ç–∏"
        self.delete_account_button = ctk.CTkButton(self.frame, text="–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞", font=("Arial", 20),
                                                   command=self.return_to_auth)
        self.delete_account_button.pack(pady=3, fill="x", padx=20)

        # –ö–Ω–æ–ø–∫–∞ "–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç"
        self.delete_account_button = ctk.CTkButton(self.frame, text="–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç", font=("Arial", 20),
                                                   fg_color="red",
                                                   command=self.delete_account)
        self.delete_account_button.pack(pady=3, fill="x", padx=20)

    def open_statistics(self):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
        self.root.quit()
        self.root.destroy()
        from Perfomance_page import PerfomancePage
        stats_window = ctk.CTk()
        stats_window.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        PerfomancePage(stats_window, self.username, self.db_manager)
        stats_window.mainloop()

    def clear_statistics(self):
        """–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        confirm = messagebox.askyesno("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É?")
        if confirm:
            user_id = self.get_user_id()
            if user_id:
                # –£–¥–∞–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                self.db_manager.execute("DELETE FROM UserTexts WHERE user_id = ?", (user_id,))
                self.db_manager.execute("DELETE FROM Favorites WHERE user_id = ?", (user_id,))
                self.db_manager.execute("UPDATE User SET exercise_cnt = 0, correct_exercise_cnt = 0, daily_text = NULL WHERE id = ?",
                                        (user_id,))
                messagebox.showinfo("–£—Å–ø–µ—à–Ω–æ", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–∏—â–µ–Ω–∞.")

    def delete_account(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        confirm = messagebox.askyesno("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!")
        if confirm:
            user_id = self.get_user_id()
            if user_id:
                self.db_manager.execute("DELETE FROM User WHERE id = ?", (user_id,))
                messagebox.showinfo("–£—Å–ø–µ—à–Ω–æ", "–ê–∫–∫–∞—É–Ω—Ç —É–¥–∞–ª—ë–Ω.")
                self.return_to_auth()

    def return_to_auth(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏."""
        self.root.quit()
        self.root.destroy()
        from auth import AuthWindow
        auth_window = ctk.CTk()
        auth_window.title("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
        AuthWindow(auth_window)
        auth_window.mainloop()

    def get_user_id(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        user = self.db_manager.fetch_one("SELECT id FROM User WHERE username = ?", (self.username,))
        return user[0] if user else None

    def get_user_password(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
        user = self.db_manager.fetch_one("SELECT password FROM User WHERE username = ?", (self.username,))
        return user[0] if user else ""

    def go_back(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É."""
        x_coordinate = self.root.winfo_x()
        y_coordinate = self.root.winfo_y()
        self.root.quit()
        self.root.destroy()
        from main_window import MainWindow
        main_window = ctk.CTk()
        main_window.title("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        main_window.geometry(f"800x800+{x_coordinate}+{y_coordinate}")
        MainWindow(main_window, self.username)
        main_window.mainloop()